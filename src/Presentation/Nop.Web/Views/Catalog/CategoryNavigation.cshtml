@model CategoryNavigationModel
@using Nop.Web.Models.Catalog;

@functions{
    public bool BreadCrumbContainsCurrentCategoryId(CategorySimpleModel category)
    {
        if (Model.CurrentCategoryId == 0)
            return false;

        if (category.Id == Model.CurrentCategoryId)
            return true;

        foreach (var subCategory in category.SubCategories)
        {
            if (BreadCrumbContainsCurrentCategoryId(subCategory))
            {
                return true;
            }
        }

        return false;
    }
}
@helper RenderCategoryLine(CategorySimpleModel category)
{
bool active = category.Id == Model.CurrentCategoryId || category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0;
bool last = category.Id == Model.CurrentCategoryId;
string liClass = active ? "active" : "inactive";
if (last)
{
    liClass += " last";
}
    <li class="@liClass">
        @if (Model.CurrentCategoryId == 0)
        {
            <a href="@Url.RouteUrl("Category",  new {  SeName = "merek/" +category.SeName + "/" + Url.RequestContext.RouteData.Values["generic_se_name"].ToString() })">
                @category.Name
                @if (category.NumberOfProducts.HasValue)
                {
                    <text> </text>@T("Categories.TotalProducts", category.NumberOfProducts.Value)
                }
             </a>
        }
        else {
            <a href="@Url.RouteUrl("Category", new { SeName=category.SeName })/">
            @category.Name
            @if (category.NumberOfProducts.HasValue)
            {
                <text> </text>@T("Categories.TotalProducts", category.NumberOfProducts.Value)
            }
            </a>
        }
        @{
            if (category.Id == Model.CurrentCategoryId ||
                category.SubCategories.Count(BreadCrumbContainsCurrentCategoryId) > 0)
            {
                if (category.SubCategories.Count > 0)
                {
                    <ul class="sublist">
                        @foreach (var subCategory in category.SubCategories)
                        {
                            @RenderCategoryLine(subCategory)
                        }
                    </ul>
                }
            }
        }
    </li>
}
@if (Model.Categories.Count > 0)
{
    <div class="iner-filter">
        <div class="block-title">
            @if (String.IsNullOrEmpty(ViewBag.CurrentCategoryName))
            {
                <strong>Kategori</strong>
            }
            else {
                <strong>@ViewBag.CurrentCategoryName</strong>
            }
        </div>
        <div class="block-content">
            <ul class="category-list">
                @foreach (var category in Model.Categories)
                {
                    @RenderCategoryLine(category)
                }
            </ul>
        </div>
    </div>
}